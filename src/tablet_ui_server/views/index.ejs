<html>

<head>


    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>LC</title>


    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="css/small-business.css" rel="stylesheet">



    <style>
        body {
            background-color: rgb(44, 43, 43);
        }

        .my-sidebar {
            -ms-flex: 0 0 800;
            flex: 0 0 800;
            background-color: greenyellow;
        }

        .gauge_text {
    font-weight: 900;
    color:aliceblue;
    font-size: 1.6em; 
}




    </style>
</head>

<body>




    <div class="container-fluid" style="max-width: 1280;">


        <div class="row" style="border:2px solid white;">

           
            <div class="col-md-1 col-md-offset-1">
                <img class="img-responsive" src="/img/zusi_icons/np_error.png" width="75" style="border:3px solid white;"
                    id="img_v0" />
            </div>
            <div class="col-md-1">
                <img class="img-responsive" src="/img/zusi_icons/np_error.png" width="75" style="border:3px solid white;"
                    id="img_v1"/>
            </div>
            <div class="col-md-1">
                <img class="img-responsive" src="/img/zusi_icons/np_error.png" width="75" style="border:3px solid white;"
                    id="img_v2" />
            </div>
             <div class="col-md-1">
                <img class="img-responsive" src="/img/zusi_icons/np_error.png" width="75" style="border:3px solid white;"
                    id="img_v3" />
            </div>
            

            <div class="col-md-1">
                <img class="img-responsive" src="/img/zusi_icons/np_error.png" width="75" style="border:3px solid white;"
                    id="img_direction" onclick="change_direction()" />
            </div>

            <div class="col-md-1">
                <img class="img-responsive" src="/img/zusi_icons/np_error.png" width="75" style="border:3px solid white;"
                    id="img_ctlmode" onclick="change_ctlmode()" />
            </div>

        </div>


        <!-- Heading Row -->
        <div class="row" style="border:2px solid white;">
            <div class="col-md-6 col-md-offset-1" style="border:2px solid white;">
                <canvas id="canvas1" width="600" height="300">
                    Your browser does not support the canvas element.
                </canvas>
            </div>
            <div class="col-md-6 col-md-offset-1" style="border:2px solid white;">
                <canvas id="canvas2" width="600" height="300">
                    Your browser does not support the canvas element.
                </canvas>
            </div>
        </div>


        <div class="row" style="border:2px solid white;">
            <div class="col-md-6 col-md-offset-1 center-block text-center" style="border:2px solid white;">
            <span class="gauge_text" id="gauge_kmh_text">0</span>
            </div>
            <div class="col-md-6 col-md-offset-1 center-block text-center" style="border:2px solid white;">
                <span class="gauge_text" id="gauge_kn_text">0</span>
            </div>
        </div>


        <div class="row" style="border:2px solid white;">
            <div class="col-md-6 col-md-offset-1 center-block text-center" style="border:2px solid white;">
            
          
            </div>
            <div class="col-md-6 col-md-offset-1 center-block text-center" style="border:2px solid white;">
                <button type="button" class="btn btn-info" id="chgaugtwo" onclick="sw_gauge_mode_two()"> KN </button>
            </div>
        </div>


        <div class="row">


            <div class="col-md-12 col-md-offset-1" style="border:2px solid white;" id="alert_box">
                &nbsp;
                <div class="alert alert-primary" role="alert" id="alert_box">
                    NO MESSAGES AVARIABLE
                </div>
            </div>


        </div>











        <!-- Bootstrap core JavaScript -->
        <script src="vendor/jquery/jquery.min.js"></script>
        <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
        <script src="js/204socket.io.js"></script>
        <script src="js/gauge.js"></script>




        <script>
            var socket = null;
            //SET TO BG IMG_SIZE
            function change_direction(){
                socket.emit('dirch',{'event':'dirch'});
            }

             function change_direction(){
                socket.emit('ctlmodech',{'event':'ctlmode'});
            }


            var gauge_two_mode = 1; //1=kn // 0=bar

            function sw_gauge_mode_two(){
                //chgaugtwo
                if(gauge_two_mode == 0){
                    gauge_two_mode = 1;
                    $("#chgaugtwo").text("KOMPRESSORDRUCK");
                }else{
                    gauge_two_mode = 0;
                    $("#chgaugtwo").text("KN");
                }
            }
            
            var audio_alert = new Audio('/slow-spring-board.ogg');
            function show_alert(_msg, _is_err = false) {
                if (!_is_err) {
                    $("#alert_box").html("&nbsp; <div class='alert alert-primary' role='alert' id='alert_box'>" + _msg + "</div>");
                } else {
                    $("#alert_box").html("&nbsp; <div class='alert alert-danger' role='alert' id='alert_box'>" + _msg + "</div>");
                }
            }




            function switch_image(_id, _state) {
                var th = $("#img_" + _id);
                if (th == null || _state == null || _id == null) {
                    th.attr("src", "/img/zusi_icons/np_error.png");
                    console.log("INVALID STATE IMAGE:" + _id + " s:" + _state)
                    return;
                }

                th.attr("src", "/img/zusi_icons/" + String(_id) + "_" + String(_state) + ".png");
            }

var old_alert_msg = "";
var kmhsum = 0;
var kmh_val = [
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
]
var kmhindex = 0;
var nullcounter = 0;
var fahrtrichtungtext = "---";
var chmodeicon_switched = false;

            function parse_state_data(_data) {

                if (_data == null || _data.display == null) {
                    show_alert("DATA STATE PARSING FAILED")
                }
                console.log(_data);
                //SET STATUS ICONS
              //  if (_data.display.alert != undefined && _data.display.alert != null) { switch_image("alert", _data.display.alert); } else { switch_image("alert", null); }
             
                //UPDATE GAUGES
               
                    if(_data.display.state_v0 != undefined && _data.display.state_v0 != null){
                        if(_data.display.state_v0){
                            $("#img_v0").attr("src","/img/zusi_icons/v1on.png");
                        }else{
                            $("#img_v0").attr("src","/img/zusi_icons/v1off.png");
                        }
                    }else{
                        $("#img_v0").attr("src","/img/zusi_icons/np_error.png");
                    }

                    if(_data.display.state_v1 != undefined && _data.display.state_v1 != null){
                        if(_data.display.state_v1){
                            $("#img_v1").attr("src","/img/zusi_icons/v2on.png");
                        }else{
                            $("#img_v1").attr("src","/img/zusi_icons/v2off.png");
                        }
                    }else{
                        $("#img_v1").attr("src","/img/zusi_icons/np_error.png");
                    }

                    if(_data.display.state_v2 != undefined && _data.display.state_v2 != null){
                        if(_data.display.state_v2){
                            $("#img_v2").attr("src","/img/zusi_icons/v3on.png");
                        }else{
                            $("#img_v2").attr("src","/img/zusi_icons/v3off.png");
                        }
                    }else{
                        $("#img_v2").attr("src","/img/zusi_icons/np_error.png");
                    }

                    if(_data.display.state_v3 != undefined && _data.display.state_v3 != null){
                        if(_data.display.state_v3){
                            $("#img_v3").attr("src","/img/zusi_icons/v4on.png");
                        }else{
                            $("#img_v3").attr("src","/img/zusi_icons/v4off.png");
                        }
                    }else{
                        $("#img_v3").attr("src","/img/zusi_icons/np_error.png");
                    }

                    if(gauge_two_mode == 1){
                        $("#gauge_kn_text").html(String(_data.display.kn) + " KN");
                        gauge_kn.set(_data.display.kn); // set actual value
                    }else if(gauge_two_mode == 0){
                        $("#gauge_kn_text").html(String(_data.display.kompressordruck) + " BAR");
                        gauge_kn.set(_data.display.kompressordruck); // set actual value
                    }else{
                        $("#gauge_kn_text").html(String(_data.display.kn) + "---");
                    }
                   



                    if(_data.display.ctlmode != undefined && _data.display.ctlmode != null){
                        if(_data.display.ctlmode == 1){
                            $("#img_ctlmode").attr("src","/img/zusi_icons/ctl_curr.png");

                            if(!chmodeicon_switched){
                            gauge_two_mode = true;
                            chmodeicon_switched = true;
                            }


                        }else{
                            $("#img_ctlmode").attr("src","/img/zusi_icons/ctl_rpm.png");
                            chmodeicon_switched = false;
                        }

                        
                    }else{
                        $("#img_ctlmode").attr("src","/img/zusi_icons/np_error.png");
                    }
                
                if (_data.display.kmh != undefined && _data.display.kmh != null) {
                        gauge_kmh.set( _data.display.kmh);
                        $("#gauge_kmh_text").html(String( _data.display.kmh) + " KMH");
                }


                if(_data.display.direction == 1){
                    fahrtrichtungtext = "FORWARD";
                    $("#img_direction").attr("src","/img/zusi_icons/forward.png");
                  
                }else if(_data.display.direction == 0){
                    fahrtrichtungtext = "BACKWARD";
                    $("#img_direction").attr("src","/img/zusi_icons/backward.png");
                }else{
                    fahrtrichtungtext = "UNKNOWN";
                    $("#img_direction").attr("src", "/img/zusi_icons/np_error.png");
                }
              //  show_alert(fahrtrichtungtext, !_data.display.direction);


                //UPDATE ALERT TEXT
                if (_data.display.alert_msg != undefined && _data.display.alert_msg != null ) {
                show_alert(_data.display.alert_msg,false);
                if(old_alert_msg != _data.display.alert_msg && String(_data.display.alert_msg) != ""){ 
                old_alert_msg = _data.display.alert_msg;
                audio_alert.play();
                setTimeout(() => {
                    show_alert(_data.display.alert_msg, false);
                    setTimeout(() => {
                        show_alert(_data.display.alert_msg, true);
                    }, 1000);
                }, 1000);
                }

                } 
            }

            var opts_kmh = {
                angle: 0, // The span of the gauge arc
                lineWidth: 0.44, // The line thickness
                radiusScale: 1, // Relative radius
                pointer: {
                    length: 0.5, // // Relative to gauge radius
                    strokeWidth: 0.035, // The thickness
                    color: '#000000' // Fill color
                },
                limitMax: true,     // If false, max value increases automatically if value > maxValue
                limitMin: true,     // If true, the min value of the gauge will be fixed
                colorStart: '#6FADCF',   // Colors
                colorStop: '#8FC0DA',    // just experiment with them
                strokeColor: '#E0E0E0',  // to see which ones work best for you
                generateGradient: true,
                highDpiSupport: true,     // High resolution support

            };

            var opts_kn = {
                angle: 0, // The span of the gauge arc
                lineWidth: 0.44, // The line thickness
                radiusScale: 1, // Relative radius
                pointer: {
                    length: 0.5, // // Relative to gauge radius
                    strokeWidth: 0.035, // The thickness
                    color: '#000000' // Fill color
                },
                limitMax: true,     // If false, max value increases automatically if value > maxValue
                limitMin: true,     // If true, the min value of the gauge will be fixed
                colorStart: '#E0E0E0',   // Colors
                colorStop: '#E0E0E0',    // just experiment with them
                strokeColor: '#E0E0E0',  // to see which ones work best for you
                generateGradient: true,
                highDpiSupport: true,     // High resolution support

            };
            var target1 = document.getElementById('canvas2'); // your canvas element
            var gauge_kn = new Gauge(target1).setOptions(opts_kn); // create sexy gauge!
            gauge_kn.maxValue = 20; // set max gauge value
            gauge_kn.setMinValue(-20);  // Prefer setter over gauge.minValue = 0
            gauge_kn.animationSpeed = 32; // set animation speed (32 is default value)
            gauge_kn.set(0); // set actual value

            var target2 = document.getElementById('canvas1'); // your canvas element
            var gauge_kmh = new Gauge(target2).setOptions(opts_kmh); // create sexy gauge!
            gauge_kmh.maxValue = 15; // set max gauge value
            gauge_kmh.setMinValue(0);  // Prefer setter over gauge.minValue = 0
            gauge_kmh.animationSpeed = 32; // set animation speed (32 is default value)
            gauge_kmh.set(0); // set actual value
            //TODO SET KMH TEXT TO 0







            $(document).ready(function () {
                socket = io();
                socket.on('broadcast', function (data) {
                    if (data == null) { return; }
                    //console.log(data);
                    parse_state_data(data)
                });
            });
        </script>

</body>

</html>